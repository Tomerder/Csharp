using System;
using PerformanceHarness;

[MeasurableClass]
public static class JaggedArrayTest
{
     private static volatile int _x;
     private static int[][] _array;

	[SetupMethod]
	static void Setup()
	{
         _array = new int[100][];
         for (int i = 0; i < _array.Length; ++i)
             _array[i] = new int[100];
	}

	[TeardownMethod]
	static void Teardown()
	{
          _array = null;
          GC.Collect();
	}

	[MeasurableMethod]
	static void Measure()
	{
          int[][] array = _array;
		for (int __i = 0; __i < %NUMBER_OF_ITERATIONS%; ++__i)
		{
               for (int i = 0; i < array.Length; ++i) {
                  int[] subarray = array[i];
                  for (int j = 0; j < subarray.Length; ++j)
                       _x += subarray[j];
               }
		}
	}
}